version: 0.2

phases:
  pre_build:
    commands:
      - echo Entered the pre_build phase...
      - echo Logging in to Amazon ECR....

      - echo $CODEBUILD_WEBHOOK_ACTOR_ACCOUNT_ID
      - echo $CODEBUILD_INITIATOR
      - echo $CODEBUILD_WEBHOOK_EVENT
      - echo $CODEBUILD_WEBHOOK_TRIGGER
      - echo $CODEBUILD_WEBHOOK_HEAD_REF
      - echo $CODEBUILD_WEBHOOK_BASE_REF

      - aws --version
      - docker --version
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-8)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME
      - TAG_LATEST=$REPOSITORY_URI:latest
      - TAG_COMMIT=$REPOSITORY_URI:$IMAGE_TAG
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -f release.Dockerfile -t $TAG_LATEST .
      - docker tag $TAG_LATEST $TAG_COMMIT
  post_build:
    commands:
      - echo Build completed on `date`
      - echo pushing to repo
      - docker push $TAG_LATEST
      - docker push $TAG_COMMIT
      - echo Running pre_start script
      # run migrations
      - sh pre_start.sh
      - echo Writing image definitions file...
      - printf '[{"name":"sites-lv-release","imageUri":"%s"}]' $TAG_COMMIT > imagedefinitions.json
artifacts:
  files: imagedefinitions.json
